from lenstronomy.SimulationAPI.observation_api import SingleBand
__all__ = ['get_noise_sigma2_lenstronomy']

def get_noise_sigma2_lenstronomy(img, pixel_scale, exposure_time, magnitude_zero_point, read_noise=None, ccd_gain=None, sky_brightness=None, seeing=None, num_exposures=1, psf_type='GAUSSIAN', kernel_point_source=None, truncation=5, data_count_unit='ADU', background_noise=None):
    """Get the variance of sky, readout, and Poisson flux noise sources using lenstronomy

    Parameters
    ----------
    img : 2D numpy array
        image on which the noise will be evaluated
    pixel_scale : float
        pixel scale in arcsec/pixel
    exposure_time : float
        exposure time per image in seconds
    magnitude_zero_point : float
        magnitude at which 1 count per second per arcsecond square is registered
    read_noise : float
        std of noise generated by readout (in units of electrons)
    ccd_gain : float
        electrons/ADU (analog-to-digital unit). A gain of 8 means that the camera digitizes the CCD signal so that each ADU corresponds to 8 photoelectrons
    sky_brightness : float
         sky brightness (in magnitude per square arcsec)
    seeing : float
        fwhm of PSF
    num_exposures : float
        number of exposures that are combined
    psf_type : str
        type of PSF ('GAUSSIAN' and 'PIXEL' supported)
    kernel_point_source : 2d numpy array
        model of PSF centered with odd number of pixels per axis(optional when psf_type='PIXEL' is chosen)
    truncation : float
        Gaussian truncation (in units of sigma), only required for 'GAUSSIAN' model
    data_count_unit : str
        unit of the data (and other properties), 'e-': (electrons assumed to be IID), 'ADU': (analog-to-digital unit)
    background_noise : float
        sqrt(variance of background) as a total contribution from read noise, sky brightness, etc. in units of the data_count_units
        If you set this parameter, it will override read_noise, sky_brightness. Default: None

    Returns
    -------
    dict
        variance in the poisson, sky, and readout noise sources

    """
    single_band = SingleBand(pixel_scale, exposure_time, magnitude_zero_point, read_noise=read_noise, ccd_gain=ccd_gain, sky_brightness=sky_brightness, seeing=seeing, num_exposures=num_exposures, psf_type=psf_type, kernel_point_source=kernel_point_source, truncation=truncation, data_count_unit=data_count_unit, background_noise=background_noise)
    noise_sigma2 = {}
    noise_sigma2['poisson'] = single_band.flux_noise(img)**2.0
    exposure_time_tot = single_band._num_exposures * single_band._exposure_time
    readout_noise_tot = single_band._num_exposures * single_band.read_noise**2.0
    sky_per_pixel = single_band.sky_brightness * single_band.pixel_scale ** 2
    noise_sigma2['sky'] = sky_per_pixel**2.0/exposure_time_tot
    noise_sigma2['readout'] = readout_noise_tot / exposure_time_tot**2.0
    return noise_sigma2

    
